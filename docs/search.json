[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Yubo Shao. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Shao Y (2023). ppLasso: Variable selection algorithm generalized linear models high dimensional center effects. R package version 1.5.","code":"@Manual{,   title = {ppLasso: Variable selection algorithm for generalized linear models with high dimensional center effects},   author = {Yubo Shao},   year = {2023},   note = {R package version 1.5}, }"},{"path":"/reference/ExampleData.html","id":null,"dir":"Reference","previous_headings":"","what":"example data for `pp.lasso` and `grp.lasso` — ExampleData","title":"example data for `pp.lasso` and `grp.lasso` — ExampleData","text":"simulated data set containing response variable, provider information 5 covariates.","code":""},{"path":"/reference/ExampleData.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"example data for `pp.lasso` and `grp.lasso` — ExampleData","text":"","code":"data(ExampleData)"},{"path":"/reference/ExampleData.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"example data for `pp.lasso` and `grp.lasso` — ExampleData","text":"list containing following elements: Y response variable. Prov.ID provider information. Z_1, ..., Z_5 5 continuous covariates.","code":""},{"path":"/reference/cv.grp.lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation for grp.lasso — cv.grp.lasso","title":"Cross-validation for grp.lasso — cv.grp.lasso","text":"performs k-fold cross validation group penalized regression models grid values regularization parameter lambda.","code":""},{"path":"/reference/cv.grp.lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation for grp.lasso — cv.grp.lasso","text":"","code":"cv.grp.lasso(   data,   Y.char,   Z.char,   prov.char,   group = 1:length(Z.char),   ...,   nfolds = 10,   seed,   fold,   trace.cv = FALSE )"},{"path":"/reference/cv.grp.lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation for grp.lasso — cv.grp.lasso","text":"data `dataframe` `list` object contains variables model. Y.char name response variable `data` character string, `pp.lasso` function. Z.char names covariates `data` vector character strings, `pp.lasso` function. prov.char name provider IDs variable `data` character string, `pp.lasso` function. group vector describing grouping coefficients. coefficients included model without penalized, assign group 0 (\"0\"). ... extra arguments passed function. nfolds number cross-validation folds. Default 10. seed seed random number generator order obtain reproducible results. fold vector specifies fold observations belongs . default observations randomly assigned. trace.cv `cv.pp.lasso` provide user progress cross validation `trace.cv = TRUE`. Default FALSE.","code":""},{"path":"/reference/cv.grp.lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validation for grp.lasso — cv.grp.lasso","text":"object S3 class `cv.gr_ppLasso`. cve error value lambda, averaged across cross-validation folds. cvse estimated standard error associated value cve. lambda sequence regularization parameter values along cross-validation error calculated. fit fitted `pp.lasso` object whole data. fold fold assignments cross-validation observation min index lambda corresponding lambda.min. lambda.min value lambda minimum cross-validation error.","code":""},{"path":"/reference/cv.grp.lasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross-validation for grp.lasso — cv.grp.lasso","text":"K. , J. Kalbfleisch, Y. Li, et al. (2013) Evaluating hospital readmission rates dialysis facilities; adjusting hospital effects. Lifetime Data Analysis, 19: 490-512.","code":""},{"path":"/reference/cv.grp.lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validation for grp.lasso — cv.grp.lasso","text":"","code":"if (FALSE) { data(ExampleData) Y.char <- 'Y' prov.char <- 'Prov.ID' Z.char <- c(\"Z_1\", \"Z_2\", \"Z_3\", \"Z_4\", \"Z_5\") group <- c(1, 1, 2, 2, 3) fit <- cv.grp.lasso(ExampleData, Y.char, Z.char, prov.char, group = group) }"},{"path":"/reference/cv.pp.lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"Cross-validation for pp.lasso — cv.pp.lasso","title":"Cross-validation for pp.lasso — cv.pp.lasso","text":"performs k-fold cross validation penalized regression models grid values regularization parameter lambda.","code":""},{"path":"/reference/cv.pp.lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Cross-validation for pp.lasso — cv.pp.lasso","text":"","code":"cv.pp.lasso(   data,   Y.char,   Z.char,   prov.char,   penalize.x = rep(1, length(Z.char)),   ...,   nfolds = 10,   seed,   fold,   trace.cv = FALSE )"},{"path":"/reference/cv.pp.lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Cross-validation for pp.lasso — cv.pp.lasso","text":"data `dataframe` `list` object contains variables model. Y.char name response variable `data` character string, `pp.lasso` function. Z.char names covariates `data` vector character strings, `pp.lasso` function. prov.char name provider IDs variable `data` character string, `pp.lasso` function. penalize.x vector indicates whether corresponding covariate penalized, `pp.lasso` function. ... extra arguments passed function. nfolds number cross-validation folds. Default 10. seed seed random number generator order obtain reproducible results. fold vector specifies fold observations belongs . default observations randomly assigned. trace.cv `cv.pp.lasso` provide user progress cross validation `trace.cv = TRUE`. Default FALSE.","code":""},{"path":"/reference/cv.pp.lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Cross-validation for pp.lasso — cv.pp.lasso","text":"object S3 class `cv.ppLasso`. cve error value lambda, averaged across cross-validation folds. cvse estimated standard error associated value cve. lambda sequence regularization parameter values along cross-validation error calculated. fit fitted `pp.lasso` object whole data. fold fold assignments cross-validation observation min index lambda corresponding lambda.min. lambda.min value lambda minimum cross-validation error.","code":""},{"path":"/reference/cv.pp.lasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Cross-validation for pp.lasso — cv.pp.lasso","text":"K. , J. Kalbfleisch, Y. Li, et al. (2013) Evaluating hospital readmission rates dialysis facilities; adjusting hospital effects. Lifetime Data Analysis, 19: 490-512.","code":""},{"path":"/reference/cv.pp.lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Cross-validation for pp.lasso — cv.pp.lasso","text":"","code":"if (FALSE) { data(ExampleData) Y.char <- 'Y' prov.char <- 'Prov.ID' Z.char <- c(\"Z_1\", \"Z_2\", \"Z_3\", \"Z_4\", \"Z_5\") fit <- cv.pp.lasso(ExampleData, Y.char, Z.char, prov.char, nfolds = 10) }"},{"path":"/reference/grp.lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a group penalized generalized regression model — grp.lasso","title":"fit a group penalized generalized regression model — grp.lasso","text":"Fit group penalized generalized regression model via coordinate descent method:","code":""},{"path":"/reference/grp.lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a group penalized generalized regression model — grp.lasso","text":"","code":"grp.lasso(   data,   Y.char,   Z.char,   prov.char,   group = 1:length(Z.char),   group.multiplier,   standardize = T,   lambda,   nlambda = 100,   lambda.min.ratio = 1e-04,   lambda.early.stop = FALSE,   nvar.max = p,   group.max = length(unique(group)),   stop.dev.ratio = 0.001,   bound = 10,   backtrack = FALSE,   tol = 1e-04,   max.each.iter = 10000,   max.total.iter = (max.each.iter * nlambda),   actSet = TRUE,   actIter = max.each.iter,   actGroupNum = sum(unique(group) != 0),   actSetRemove = F,   returnX = FALSE,   trace.lambda = FALSE,   threads = 1,   ... )"},{"path":"/reference/grp.lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a group penalized generalized regression model — grp.lasso","text":"data `dataframe` `list` object contains variables model. Y.char name response variable `data` character string. Z.char names covariates `data` vector character strings. prov.char name provider IDs variable `data` character string.. group vector describing grouping coefficients. coefficients included model without penalized, assign group 0 (\"0\"). group.multiplier vector values representing multiplicative factors covariate's penalty multiplied. Default vector 1's. standardize logical flag x variable standardization, prior fitting model sequence. coefficients always returned original scale. Default `standardize=TRUE`. lambda user supplied lambda sequence. Typical usage program compute lambda sequence based `nlambda` `lambda.min.ratio`. nlambda number lambda values. Default 100. lambda.min.ratio fraction smallest value lambda `lambda.max` (smallest lambda coefficients zero) log scale. Default 1e-04. lambda.early.stop whether program stop running entire sequence lambda. Early stop based ratio deviance models two successive lambda. Default `FALSE`. nvar.max number maximum selected variables. Default number covariates. group.max number maximum selected groups. Default number groups. stop.dev.ratio `lambda.early.stop = TRUE`, ratio deviance early stopping. Default 1e-3. bound positive number avoid inflation provider effect. Default 10. backtrack updating provider effect, whether use \"backtracking line search\" Newton method. tol convergence threshold. lambda, program stop maximum change covariate coefficient smaller `tol`. Default 1e-4. max..iter maximum number iterations lambda. Default 1e4. max.total.iter maximum number iterations entire path. Default `max..iter` * `nlambda`. actSet whether use active method variable selection. Default TRUE. actGroupNum `actSet = TRUE`, maximum number variables can selected new active set time active set updated. Default number groups. actSetRemove `actSet = TRUE`, whether remove zero coefficients current active set. Default FALSE. returnX whether return standardized design matrix. Default FALSE. trace.lambda whether display progress fitting entire path. Default FALSE. threads number cores used parallel computing. ... extra arguments passed function. atIter `actSet = TRUE`, maximum number iterations new updated active set. Default `max..iter` (.e. update current active set convergence ).","code":""},{"path":"/reference/grp.lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a group penalized generalized regression model — grp.lasso","text":"object S3 class `gr_ppLasso`. beta fitted matrix covariate coefficients. number rows equal number coefficients, number columns equal nlambda. gamma fitted value provider effects. group vector describing grouping coefficients. lambda sequence `lambda` values path. loss loss fitted model value `lambda`. linear.predictors linear predictors fitted model value `lambda`. df estimates effective number selected variables points along regularization path. iter number iterations convergence value `lambda`.","code":""},{"path":"/reference/grp.lasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit a group penalized generalized regression model — grp.lasso","text":"model fit Newton method coordinate descent method.","code":""},{"path":"/reference/grp.lasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"fit a group penalized generalized regression model — grp.lasso","text":"K. , J. Kalbfleisch, Y. Li, et al. (2013) Evaluating hospital readmission rates dialysis facilities; adjusting hospital effects. Lifetime Data Analysis, 19: 490-512.","code":""},{"path":[]},{"path":"/reference/grp.lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit a group penalized generalized regression model — grp.lasso","text":"","code":"if (FALSE) { data(ExampleData) Y.char <- 'Y' prov.char <- 'Prov.ID' Z.char <- c(\"Z_1\", \"Z_2\", \"Z_3\", \"Z_4\", \"Z_5\") group <- c(1, 1, 2, 2, 3) fit <- grp.lasso(ExampleData, Y.char, Z.char, prov.char, group = group) }"},{"path":"/reference/pp.lasso.html","id":null,"dir":"Reference","previous_headings":"","what":"fit a penalized generalized regression model — pp.lasso","title":"fit a penalized generalized regression model — pp.lasso","text":"Fit penalized generalized regression model via coordinate descent method:","code":""},{"path":"/reference/pp.lasso.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit a penalized generalized regression model — pp.lasso","text":"","code":"pp.lasso(   data,   Y.char,   Z.char,   prov.char,   standardize = T,   lambda,   nlambda = 100,   lambda.min.ratio = 1e-04,   penalize.x = rep(1, length(Z.char)),   penalized.multiplier,   lambda.early.stop = FALSE,   nvar.max = p,   stop.dev.ratio = 0.001,   bound = 10,   backtrack = FALSE,   tol = 1e-04,   max.each.iter = 10000,   max.total.iter = (max.each.iter * nlambda),   actSet = TRUE,   actIter = max.each.iter,   actVarNum = sum(penalize.x == 1),   actSetRemove = F,   returnX = FALSE,   trace.lambda = FALSE,   threads = 1,   MM = FALSE,   ... )"},{"path":"/reference/pp.lasso.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit a penalized generalized regression model — pp.lasso","text":"data `dataframe` `list` object contains variables model. Y.char name response variable `data` character string. Z.char names covariates `data` vector character strings. prov.char name provider IDs variable `data` character string. standardize logical flag x variable standardization, prior fitting model sequence. coefficients always returned original scale. Default `standardize=TRUE`. lambda user supplied lambda sequence. Typical usage program compute lambda sequence based `nlambda` `lambda.min.ratio`. nlambda number lambda values. Default 100. lambda.min.ratio fraction smallest value lambda `lambda.max` (smallest lambda coefficients zero) log scale. Default 1e-04. penalize.x vector indicates whether corresponding covariate penalized. equals 0, variable unpenalized, else penalized. Default vector 1's (covariates penalized). penalized.multiplier vector values representing multiplicative factors covariate's penalty multiplied. Default vector 1's. lambda.early.stop whether program stop running entire sequence lambda. Early stop based ratio deviance models two successive lambda. Default `FALSE`. nvar.max number maximum selected variables. Default number covariates. stop.dev.ratio `lambda.early.stop = TRUE`, ratio deviance early stopping. Default 1e-3. bound positive number avoid inflation provider effect. Default 10. backtrack updating provider effect, whether use \"backtracking line search\" Newton method. tol convergence threshold. lambda, program stop maximum change covariate coefficient smaller `tol`. Default 1e-4. max..iter maximum number iterations lambda. Default 1e4. max.total.iter maximum number iterations entire path. Default `max..iter` * `nlambda`. actSet whether use active method variable selection. Default TRUE. actVarNum `actSet = TRUE`, maximum number variables can selected new active set time active set updated. Default `nvar.max`. actSetRemove `actSet = TRUE`, whether remove zero coefficients current active set. Default FALSE. returnX whether return standardized design matrix. Default FALSE. trace.lambda whether display progress fitting entire path. Default FALSE. threads number cores used parallel computing. MM whether use \"Majorize-Minimization\" algorithm optimize objective function. ... extra arguments passed function. atIter `actSet = TRUE`, maximum number iterations new updated active set. Default `max..iter` (.e. update current active set convergence ).","code":""},{"path":"/reference/pp.lasso.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit a penalized generalized regression model — pp.lasso","text":"object S3 class `ppLasso`. beta fitted matrix covariate coefficients. number rows equal number coefficients, number columns equal nlambda. gamma fitted value provider effects. lambda sequence `lambda` values path. loss loss fitted model value `lambda`. linear.predictors linear predictors fitted model value `lambda`. df estimates effective number selected variables points along regularization path. iter number iterations convergence value `lambda`.","code":""},{"path":"/reference/pp.lasso.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"fit a penalized generalized regression model — pp.lasso","text":"model fit Newton method coordinate descent method.","code":""},{"path":"/reference/pp.lasso.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"fit a penalized generalized regression model — pp.lasso","text":"K. , J. Kalbfleisch, Y. Li, et al. (2013) Evaluating hospital readmission rates dialysis facilities; adjusting hospital effects. Lifetime Data Analysis, 19: 490-512.","code":""},{"path":[]},{"path":"/reference/pp.lasso.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fit a penalized generalized regression model — pp.lasso","text":"","code":"if (FALSE) { data(ExampleData) Y.char <- 'Y' prov.char <- 'Prov.ID' Z.char <- c(\"Z_1\", \"Z_2\", \"Z_3\", \"Z_4\", \"Z_5\") fit <- pp.lasso(ExampleData, Y.char, Z.char, prov.char, MM = F) }"},{"path":"/reference/ppLasso-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Variable selection algorithm for generalized linear models with high dimensional center effects — ppLasso-package","title":"Variable selection algorithm for generalized linear models with high dimensional center effects — ppLasso-package","text":"efficient algorithm solving GLM lasso problems large number health centers","code":""},{"path":"/reference/ppLasso-package.html","id":"package-content","dir":"Reference","previous_headings":"","what":"Package Content","title":"Variable selection algorithm for generalized linear models with high dimensional center effects — ppLasso-package","text":"Index:  package yet installed build time.","code":""},{"path":"/reference/ppLasso-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Variable selection algorithm for generalized linear models with high dimensional center effects — ppLasso-package","text":"Yubo Shao","code":""},{"path":"/reference/ppLasso-package.html","id":"maintainer","dir":"Reference","previous_headings":"","what":"Maintainer","title":"Variable selection algorithm for generalized linear models with high dimensional center effects — ppLasso-package","text":"Yubo Shao <ybshao@umich.edu>","code":""}]
